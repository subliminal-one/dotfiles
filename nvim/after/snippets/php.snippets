snippet <?
    <?php

    ${0:${VISUAL}}

snippet dst "declare(strict_types=1)"
    declare(strict_types=1);

snippet class "class ..."
    class ${1:className}
    {
        public function __construct(${2:Type} $${3:argument})
        {
            ${0:${VISUAL}}
        }
    }

snippet method "class method ..."
    ${1:public} function ${2:name}(${3:$arguments})${4:: void}
    {
        ${0:${VISUAL}}
    }

snippet try "try { ... } catch (Exception $e) { ... }"
    try {
        ${0:${VISUAL}}
    } catch (${1:Exception} $e) {
    }

snippet foreachk "foreach ($var as $key => $value) { .. }"
    foreach ($${1:variable} as $${2:key} => $${3:value}) {
        ${0:${VISUAL}}
    }

snippet test "phpunit ..."
    <?php
    declare(strict_types=1);

    namespace ${1:namespace};

    use Tests\TestCase;

    class ${2:class} extends TestCase
    {
        ${0:${VISUAL}}
    }

snippet setup "phpunit setup ..."
    public function setUp(): void
    {
        parent::setUp();
        ${0:${VISUAL}}
    }
